{"version":3,"file":"static/js/415.7412a264.chunk.js","mappings":"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","sources":["components/MoviesList.jsx","pages/Home.jsx","services/moviesServices.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ moviesArray }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"movies-list-wrapper\">\n      <ul className=\"movies-list\">\n        {moviesArray.map(({ id, title, poster_path }) => (\n          <li key={id} className=\"movies-list-item\">\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className=\"movies-list-link\"\n            >\n              <img\n                className=\"movies-list-img\"\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n                }\n                alt={title}\n              />\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import MoviesList from 'components/MoviesList';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { trendMoviesService } from '../services/moviesServices';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  const getTrendMovies = useCallback(async () => {\n    return trendMoviesService().then(resp => {\n      setMovies(resp);\n    });\n  }, []);\n\n  useEffect(() => {\n    getTrendMovies();\n  }, [getTrendMovies]);\n\n  return (\n    <div>\n      <h1\n        style={{\n          textAlign: 'center',\n          fontSize: 60,\n          marginBottom: 20,\n        }}\n      >\n        Trending today\n      </h1>\n      {!movies || movies.length === 0 || <MoviesList moviesArray={movies} />}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg3N2Q0NWI2ZTQ2NDU3MzJiMzM4ZmQ1MDY5ZmMyYyIsInN1YiI6IjY1ODQyYWNmY2E4MzU0NDE1NmQ3N2Y5YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xk1Kciqlp7TV4RTr51i1EFwzQ98SxCY_Z1j0emz2etM';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getRequestConfig = (url, params) => ({\n  method: 'GET',\n  url: `${BASE_URL}/${url}`,\n  params: { language: 'en-US', ...params },\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${API_KEY}`,\n  },\n});\n\nconst castService = async movieID => {\n  const options = getRequestConfig(`movie/${movieID}/credits`, {});\n  try {\n    const { data } = await axios.request(options);\n    return data.cast;\n  } catch (error) {\n    console.error('Error with getting cast', error);\n  }\n};\n\nconst queryMoviesService = async query => {\n  const options = getRequestConfig(`search/movie`, {\n    query: `${query}`,\n    include_adult: 'false',\n    page: '1',\n  });\n  try {\n    const response = await axios.request(options);\n    const results = response.data.results;\n    return results;\n  } catch (error) {\n    console.error('Error with getting query films', error);\n  }\n};\n\nconst reviewService = async movieID => {\n  const options = getRequestConfig(`movie/${movieID}/reviews`, {});\n  try {\n    const { data } = await axios.request(options);\n    return data.results;\n  } catch (error) {\n    console.error('Error with getting review', error);\n  }\n};\n\nconst singleMovieService = async movieID => {\n  const options = getRequestConfig(`movie/${movieID}`, {});\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    console.error('Error with getting single film', error);\n  }\n};\n\nconst trendMoviesService = async () => {\n  const options = getRequestConfig(`trending/movie/day`, {});\n\n  try {\n    const response = await axios.request(options);\n    const results = response.data.results;\n    return results;\n  } catch (error) {\n    console.error('Error with getting trend films', error);\n  }\n};\n\nexport {\n  castService,\n  queryMoviesService,\n  reviewService,\n  singleMovieService,\n  trendMoviesService,\n};\n"],"names":["_ref","moviesArray","location","useLocation","_jsx","className","children","map","_ref2","id","title","poster_path","_jsxs","Link","to","concat","state","from","src","alt","_useState","useState","_useState2","_slicedToArray","movies","setMovies","getTrendMovies","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","trendMoviesService","then","resp","stop","useEffect","style","textAlign","fontSize","marginBottom","length","MoviesList","getRequestConfig","url","params","method","_objectSpread","language","headers","accept","Authorization","castService","movieID","options","_yield$axios$request","data","axios","sent","cast","t0","console","error","_x","apply","arguments","queryMoviesService","_callee2","query","response","results","_context2","include_adult","page","_x2","reviewService","_ref3","_callee3","_yield$axios$request2","_context3","_x3","singleMovieService","_ref4","_callee4","_context4","_x4","_ref5","_callee5","_context5"],"sourceRoot":""}