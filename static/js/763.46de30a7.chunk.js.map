{"version":3,"file":"static/js/763.46de30a7.chunk.js","mappings":"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","sources":["components/QueryForm.jsx","services/moviesServices.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { queryMoviesService } from '../services/moviesServices';\nimport { useSearchParams } from 'react-router-dom';\n\nconst QueryForm = ({ setMovies }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const renderMovies = () => {\n    queryMoviesService(query).then(resp => {\n      setMovies(resp);\n    });\n  };\n\n  const updateQueryParam = e => {\n    const movieName = e.target.value;\n    if (movieName === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: movieName });\n  };\n\n  useEffect(() => {\n    if (query === '') return;\n    renderMovies();\n  });\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        renderMovies();\n      }}\n      className=\"query-form\"\n    >\n      <input\n        className=\"query-input\"\n        name=\"movieName\"\n        placeholder=\"movie name\"\n        value={query}\n        onChange={updateQueryParam}\n      ></input>\n      <button type=\"submit\" className=\"buttons\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default QueryForm;\n","import axios from 'axios';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg3N2Q0NWI2ZTQ2NDU3MzJiMzM4ZmQ1MDY5ZmMyYyIsInN1YiI6IjY1ODQyYWNmY2E4MzU0NDE1NmQ3N2Y5YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xk1Kciqlp7TV4RTr51i1EFwzQ98SxCY_Z1j0emz2etM';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getRequestConfig = (url, params) => ({\n  method: 'GET',\n  url: `${BASE_URL}/${url}`,\n  params: { language: 'en-US', ...params },\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${API_KEY}`,\n  },\n});\n\nconst castService = async movieID => {\n  const options = getRequestConfig(`movie/${movieID}/credits`, {});\n  try {\n    const { data } = await axios.request(options);\n    return data.cast;\n  } catch (error) {\n    console.error('Error with getting cast', error);\n  }\n};\n\nconst queryMoviesService = async query => {\n  const options = getRequestConfig(`search/movie`, {\n    query: `${query}`,\n    include_adult: 'false',\n    page: '1',\n  });\n  try {\n    const response = await axios.request(options);\n    const results = response.data.results;\n    return results;\n  } catch (error) {\n    console.error('Error with getting query films', error);\n  }\n};\n\nconst reviewService = async movieID => {\n  const options = getRequestConfig(`movie/${movieID}/reviews`, {});\n  try {\n    const { data } = await axios.request(options);\n    return data.results;\n  } catch (error) {\n    console.error('Error with getting review', error);\n  }\n};\n\nconst singleMovieService = async movieID => {\n  const options = getRequestConfig(`movie/${movieID}`, {});\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    console.error('Error with getting single film', error);\n  }\n};\n\nconst trendMoviesService = async () => {\n  const options = getRequestConfig(`trending/movie/day`, {});\n\n  try {\n    const response = await axios.request(options);\n    const results = response.data.results;\n    return results;\n  } catch (error) {\n    console.error('Error with getting trend films', error);\n  }\n};\n\nexport {\n  castService,\n  queryMoviesService,\n  reviewService,\n  singleMovieService,\n  trendMoviesService,\n};\n"],"names":["_ref","_searchParams$get","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","renderMovies","queryMoviesService","then","resp","useEffect","_jsxs","onSubmit","e","preventDefault","className","children","_jsx","name","placeholder","value","onChange","movieName","target","type","getRequestConfig","url","params","method","concat","_objectSpread","language","headers","accept","Authorization","castService","_asyncToGenerator","_regeneratorRuntime","_callee","movieID","options","_yield$axios$request","data","_context","prev","next","axios","sent","abrupt","cast","t0","console","error","stop","_x","apply","arguments","_ref2","_callee2","response","results","_context2","include_adult","page","_x2","reviewService","_ref3","_callee3","_yield$axios$request2","_context3","_x3","singleMovieService","_ref4","_callee4","_context4","_x4","trendMoviesService","_ref5","_callee5","_context5"],"sourceRoot":""}