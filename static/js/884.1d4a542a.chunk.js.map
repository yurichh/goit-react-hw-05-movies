{"version":3,"file":"static/js/884.1d4a542a.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/moviesServices.js"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { singleMovieService } from '../services/moviesServices';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const { state } = useLocation();\n\n  useEffect(() => {\n    singleMovieService(id).then(resp => {\n      setMovie(resp);\n    });\n  }, [id]);\n  if (!movie) return;\n  const { poster_path, title, vote_average, overview } = movie;\n  return (\n    <>\n      <Link className=\"buttons\" to={state ? state.from : '/'}>\n        Back\n      </Link>\n      <div className=\"det-wrapper\">\n        <div className=\"det-img-wrapper\">\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n            }\n            alt={title}\n          />\n        </div>\n        <div className=\"det-info-wrapper\">\n          <h1>{title}</h1>\n          <h2>User average score: {vote_average}</h2>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n        </div>\n      </div>\n      <ul className=\"more-list\">\n        <li className=\"more-item\">\n          <Link to={'cast'} state={state}>\n            Cast\n          </Link>\n        </li>\n        <li className=\"more-item\">\n          <Link to={'reviews'} state={state}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<span className=\"loader\"></span>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg3N2Q0NWI2ZTQ2NDU3MzJiMzM4ZmQ1MDY5ZmMyYyIsInN1YiI6IjY1ODQyYWNmY2E4MzU0NDE1NmQ3N2Y5YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xk1Kciqlp7TV4RTr51i1EFwzQ98SxCY_Z1j0emz2etM';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getRequestConfig = (url, params) => ({\n  method: 'GET',\n  url: `${BASE_URL}/${url}`,\n  params: { language: 'en-US', ...params },\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${API_KEY}`,\n  },\n});\n\nconst castService = async movieID => {\n  const options = getRequestConfig(`movie/${movieID}/credits`, {});\n  try {\n    const { data } = await axios.request(options);\n    return data.cast;\n  } catch (error) {\n    console.error('Error with getting cast', error);\n  }\n};\n\nconst queryMoviesService = async query => {\n  const options = getRequestConfig(`search/movie`, {\n    query: `${query}`,\n    include_adult: 'false',\n    page: '1',\n  });\n  try {\n    const response = await axios.request(options);\n    const results = response.data.results;\n    return results;\n  } catch (error) {\n    console.error('Error with getting query films', error);\n  }\n};\n\nconst reviewService = async movieID => {\n  const options = getRequestConfig(`movie/${movieID}/reviews`, {});\n  try {\n    const { data } = await axios.request(options);\n    return data.results;\n  } catch (error) {\n    console.error('Error with getting review', error);\n  }\n};\n\nconst singleMovieService = async movieID => {\n  const options = getRequestConfig(`movie/${movieID}`, {});\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    console.error('Error with getting single film', error);\n  }\n};\n\nconst trendMoviesService = async () => {\n  const options = getRequestConfig(`trending/movie/day`, {});\n\n  try {\n    const response = await axios.request(options);\n    const results = response.data.results;\n    return results;\n  } catch (error) {\n    console.error('Error with getting trend films', error);\n  }\n};\n\nexport {\n  castService,\n  queryMoviesService,\n  reviewService,\n  singleMovieService,\n  trendMoviesService,\n};\n"],"names":["id","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","state","useLocation","useEffect","singleMovieService","then","resp","poster_path","title","vote_average","overview","_jsxs","_Fragment","children","_jsx","Link","className","to","from","src","concat","alt","Suspense","fallback","Outlet","getRequestConfig","url","params","method","_objectSpread","language","headers","accept","Authorization","castService","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieID","options","_yield$axios$request","data","_context","prev","next","axios","sent","abrupt","cast","t0","console","error","stop","_x","apply","arguments","queryMoviesService","_ref2","_callee2","query","response","results","_context2","include_adult","page","_x2","reviewService","_ref3","_callee3","_yield$axios$request2","_context3","_x3","_ref4","_callee4","_context4","_x4","trendMoviesService","_ref5","_callee5","_context5"],"sourceRoot":""}