{"version":3,"file":"static/js/681.cf9b19f0.chunk.js","mappings":"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","sources":["components/Reviews.jsx","services/moviesServices.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { reviewService } from '../services/moviesServices';\n\nconst Reviews = () => {\n  let { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    reviewService(id).then(resp => {\n      setReviews(resp);\n    });\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <div\n          style={{\n            textAlign: 'center',\n            fontSize: 40,\n            marginBottom: 20,\n          }}\n        >\n          {' '}\n          No reviews before\n        </div>\n      ) : (\n        <ul className=\"review-list\">\n          {reviews.map(review => {\n            const { author_details, content } = review;\n            const { rating, username } = author_details;\n            return (\n              <li key={username} className=\"review-item\">\n                <div className=\"review-user-wrapper\">\n                  <p className=\"review-text\">\n                    {' '}\n                    Author: <span className=\"review-span\"> {username}</span>\n                  </p>\n                  <p className=\"review-text\">\n                    {' '}\n                    Rating:{' '}\n                    <span className=\"review-span\">\n                      {' '}\n                      {rating ? rating : 'no rating'}\n                    </span>\n                  </p>\n                </div>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MDg3N2Q0NWI2ZTQ2NDU3MzJiMzM4ZmQ1MDY5ZmMyYyIsInN1YiI6IjY1ODQyYWNmY2E4MzU0NDE1NmQ3N2Y5YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xk1Kciqlp7TV4RTr51i1EFwzQ98SxCY_Z1j0emz2etM';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getRequestConfig = (url, params) => ({\n  method: 'GET',\n  url: `${BASE_URL}/${url}`,\n  params: { language: 'en-US', ...params },\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${API_KEY}`,\n  },\n});\n\nconst castService = async movieID => {\n  const options = getRequestConfig(`movie/${movieID}/credits`, {});\n  try {\n    const { data } = await axios.request(options);\n    return data.cast;\n  } catch (error) {\n    console.error('Error with getting cast', error);\n  }\n};\n\nconst queryMoviesService = async query => {\n  const options = getRequestConfig(`search/movie`, {\n    query: `${query}`,\n    include_adult: 'false',\n    page: '1',\n  });\n  try {\n    const response = await axios.request(options);\n    const results = response.data.results;\n    return results;\n  } catch (error) {\n    console.error('Error with getting query films', error);\n  }\n};\n\nconst reviewService = async movieID => {\n  const options = getRequestConfig(`movie/${movieID}/reviews`, {});\n  try {\n    const { data } = await axios.request(options);\n    return data.results;\n  } catch (error) {\n    console.error('Error with getting review', error);\n  }\n};\n\nconst singleMovieService = async movieID => {\n  const options = getRequestConfig(`movie/${movieID}`, {});\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    console.error('Error with getting single film', error);\n  }\n};\n\nconst trendMoviesService = async () => {\n  const options = getRequestConfig(`trending/movie/day`, {});\n\n  try {\n    const response = await axios.request(options);\n    const results = response.data.results;\n    return results;\n  } catch (error) {\n    console.error('Error with getting trend films', error);\n  }\n};\n\nexport {\n  castService,\n  queryMoviesService,\n  reviewService,\n  singleMovieService,\n  trendMoviesService,\n};\n"],"names":["id","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","reviewService","then","resp","_jsx","_Fragment","children","length","_jsxs","style","textAlign","fontSize","marginBottom","className","map","review","author_details","content","rating","username","getRequestConfig","url","params","method","concat","_objectSpread","language","headers","accept","Authorization","castService","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieID","options","_yield$axios$request","data","_context","prev","next","axios","sent","abrupt","cast","t0","console","error","stop","_x","apply","arguments","queryMoviesService","_ref2","_callee2","query","response","results","_context2","include_adult","page","_x2","_ref3","_callee3","_yield$axios$request2","_context3","_x3","singleMovieService","_ref4","_callee4","_context4","_x4","trendMoviesService","_ref5","_callee5","_context5"],"sourceRoot":""}